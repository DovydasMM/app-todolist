{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { TaskModel } from 'src/app/shared/task/task.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task-list.service\";\nimport * as i2 from \"src/app/projects.service\";\nconst _c0 = [\"nameInput\"];\nconst _c1 = [\"descriptionInput\"];\nconst _c2 = [\"dateInput\"];\nexport class TaskEditComponent {\n  constructor(taskService, projectService) {\n    this.taskService = taskService;\n    this.projectService = projectService;\n    this.changeSaved = new EventEmitter();\n  }\n  onSave() {\n    const newName = this.nameInputRef.nativeElement.value;\n    const newDescription = this.descriptionInputRef.nativeElement.value;\n    const newDate = this.dateInputRef.nativeElement.value;\n    const newTask = new TaskModel(newName, newDescription, newDate, this.taskToEdit.priority);\n    this.taskService.onTaskEdit(this.taskToEdit, newTask);\n    this.changeSaved.emit(true);\n  }\n  onCancel() {\n    this.changeSaved.emit(true);\n  }\n}\nTaskEditComponent.ɵfac = function TaskEditComponent_Factory(t) {\n  return new (t || TaskEditComponent)(i0.ɵɵdirectiveInject(i1.TaskListService), i0.ɵɵdirectiveInject(i2.ProjectsService));\n};\nTaskEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskEditComponent,\n  selectors: [[\"app-task-edit\"]],\n  viewQuery: function TaskEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nameInputRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.descriptionInputRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dateInputRef = _t.first);\n    }\n  },\n  inputs: {\n    taskToEdit: \"taskToEdit\"\n  },\n  outputs: {\n    changeSaved: \"changeSaved\"\n  },\n  decls: 17,\n  vars: 3,\n  consts: [[\"for\", \"taskName\"], [\"type\", \"text\", \"id\", \"taskName\", 1, \"form-control\", 3, \"value\"], [\"nameInput\", \"\"], [\"for\", \"taskDesc\"], [\"type\", \"text\", \"id\", \"taskDesc\", 1, \"form-control\", 3, \"value\"], [\"descriptionInput\", \"\"], [\"type\", \"date\", \"id\", \"taskName\", 1, \"form-control\", 3, \"value\"], [\"dateInput\", \"\"], [3, \"click\"]],\n  template: function TaskEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"label\", 0);\n      i0.ɵɵtext(2, \"Task name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 1, 2);\n      i0.ɵɵelementStart(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Task description: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4, 5);\n      i0.ɵɵelementStart(9, \"label\", 0);\n      i0.ɵɵtext(10, \"Task date: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 6, 7);\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function TaskEditComponent_Template_button_click_13_listener() {\n        return ctx.onSave();\n      });\n      i0.ɵɵtext(14, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function TaskEditComponent_Template_button_click_15_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(16, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.taskToEdit.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.taskToEdit.description);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.taskToEdit.date);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAGEA,YAAY,QAIP,eAAe;AAGtB,SAASC,SAAS,QAAQ,gCAAgC;;;;;;;AAQ1D,OAAM,MAAOC,iBAAiB;EAC5BC,YACUC,WAA4B,EAC5BC,cAA+B;IAD/B,gBAAW,GAAXD,WAAW;IACX,mBAAc,GAAdC,cAAc;IAOd,gBAAW,GAAG,IAAIL,YAAY,EAAW;EANhD;EAOHM,MAAM;IACJ,MAAMC,OAAO,GAAG,IAAI,CAACC,YAAY,CAACC,aAAa,CAACC,KAAK;IACrD,MAAMC,cAAc,GAAG,IAAI,CAACC,mBAAmB,CAACH,aAAa,CAACC,KAAK;IACnE,MAAMG,OAAO,GAAG,IAAI,CAACC,YAAY,CAACL,aAAa,CAACC,KAAK;IACrD,MAAMK,OAAO,GAAG,IAAId,SAAS,CAC3BM,OAAO,EACPI,cAAc,EACdE,OAAO,EACP,IAAI,CAACG,UAAU,CAACC,QAAQ,CACzB;IACD,IAAI,CAACb,WAAW,CAACc,UAAU,CAAC,IAAI,CAACF,UAAU,EAAED,OAAO,CAAC;IACrD,IAAI,CAACI,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAC7B;EACAC,QAAQ;IACN,IAAI,CAACF,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAC7B;;AA1BWlB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAoB;EAAAC;IAAA;;;;;;;;;;;;;;;;;;;;;;;MClB9BC,2BAAK;MACmBA,2BAAW;MAAAA,iBAAQ;MACzCA,8BAME;MACFA,gCAAsB;MAAAA,kCAAkB;MAAAA,iBAAQ;MAChDA,8BAME;MACFA,gCAAsB;MAAAA,4BAAW;MAAAA,iBAAQ;MACzCA,+BAME;MACFA,kCAA2B;MAAnBA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAACD,qBAAI;MAAAA,iBAAS;MACxCA,kCAA6B;MAArBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;;;MApB1CA,eAA6B;MAA7BA,sDAA6B;MAQ7BA,eAAoC;MAApCA,6DAAoC;MAQpCA,eAA6B;MAA7BA,sDAA6B","names":["EventEmitter","TaskModel","TaskEditComponent","constructor","taskService","projectService","onSave","newName","nameInputRef","nativeElement","value","newDescription","descriptionInputRef","newDate","dateInputRef","newTask","taskToEdit","priority","onTaskEdit","changeSaved","emit","onCancel","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["/home/dovydas/repos/app-todolist/src/app/tasks/task-edit/task-edit.component.ts","/home/dovydas/repos/app-todolist/src/app/tasks/task-edit/task-edit.component.html"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Task } from 'src/app/task';\nimport { TaskListService } from 'src/app/task-list.service';\nimport { TaskModel } from 'src/app/shared/task/task.model';\nimport { ProjectsService } from 'src/app/projects.service';\n\n@Component({\n  selector: 'app-task-edit',\n  templateUrl: './task-edit.component.html',\n  styleUrls: ['./task-edit.component.css'],\n})\nexport class TaskEditComponent {\n  constructor(\n    private taskService: TaskListService,\n    private projectService: ProjectsService\n  ) {}\n  @Input() taskToEdit: Task;\n  @ViewChild('nameInput', { static: false }) nameInputRef: ElementRef;\n  @ViewChild('descriptionInput', { static: false })\n  descriptionInputRef: ElementRef;\n  @ViewChild('dateInput', { static: false }) dateInputRef: ElementRef;\n  @Output() changeSaved = new EventEmitter<boolean>();\n  onSave() {\n    const newName = this.nameInputRef.nativeElement.value;\n    const newDescription = this.descriptionInputRef.nativeElement.value;\n    const newDate = this.dateInputRef.nativeElement.value;\n    const newTask = new TaskModel(\n      newName,\n      newDescription,\n      newDate,\n      this.taskToEdit.priority\n    );\n    this.taskService.onTaskEdit(this.taskToEdit, newTask);\n    this.changeSaved.emit(true);\n  }\n  onCancel() {\n    this.changeSaved.emit(true);\n  }\n}\n","<div>\n  <label for=\"taskName\">Task name: </label>\n  <input\n    type=\"text\"\n    id=\"taskName\"\n    class=\"form-control\"\n    value=\"{{ taskToEdit.name }}\"\n    #nameInput\n  />\n  <label for=\"taskDesc\">Task description: </label>\n  <input\n    type=\"text\"\n    id=\"taskDesc\"\n    class=\"form-control\"\n    value=\"{{ taskToEdit.description }}\"\n    #descriptionInput\n  />\n  <label for=\"taskName\">Task date: </label>\n  <input\n    type=\"date\"\n    id=\"taskName\"\n    class=\"form-control\"\n    value=\"{{ taskToEdit.date }}\"\n    #dateInput\n  />\n  <button (click)=\"onSave()\">Save</button>\n  <button (click)=\"onCancel()\">Cancel</button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}